# Generated by Django 5.2.3 on 2025-06-11 02:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(blank=True, choices=[('protein', 'Protein'), ('vegetable', 'Vegetable'), ('fruit', 'Fruit'), ('grain', 'Grain'), ('dairy', 'Dairy'), ('spice', 'Spice'), ('herb', 'Herb'), ('condiment', 'Condiment'), ('sauce', 'Sauce'), ('sweetener', 'Sweetener'), ('fat', 'Fat'), ('other', 'Other')], default='other', help_text='What type of food is this?', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('original_url', models.URLField(blank=True, help_text='Original recipe URL')),
                ('prep_time', models.PositiveIntegerField(blank=True, help_text='Prep time in minutes', null=True)),
                ('cook_time', models.PositiveIntegerField(blank=True, help_text='Cook time in minutes', null=True)),
                ('total_time', models.PositiveIntegerField(blank=True, help_text='Total time in minutes', null=True)),
                ('servings', models.PositiveIntegerField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('instructions', models.TextField()),
                ('user_notes', models.TextField(blank=True, help_text='Your personal notes about this recipe')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('color', models.CharField(default='#cccccc', help_text='HEX color code for this tag (e.g., #FF5733)', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_text', models.CharField(max_length=200)),
                ('quantity', models.CharField(blank=True, max_length=50)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('preparation', models.CharField(blank=True, max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_recipes', to='recipes.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.recipe')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('recipe', 'ingredient', 'order')},
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(blank=True, related_name='recipes', through='recipes.RecipeIngredient', to='recipes.ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='recipes', to='recipes.recipetag'),
        ),
    ]
